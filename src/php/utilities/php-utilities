#!/bin/sh

# shellcheck source=src/common/utilities/common-utilities
. "$SNAP/utilities/common-utilities"

DEFAULT_MEMORY_LIMIT="512M"
DEFAULT_MAX_EXECUTION_TIME="3600"
DEFAULT_MAX_INPUT_TIME="3600"
export PHP_FPM_PIDFILE="/tmp/pids/php-fpm.pid"
export PHP_FPM_SOCKET="/tmp/sockets/php-fpm.sock"

mkdir -p "$(dirname "$PHP_FPM_PIDFILE")"
mkdir -p "$(dirname "$PHP_FPM_SOCKET")"
chmod 750 "$(dirname "$PHP_FPM_PIDFILE")"
chmod 750 "$(dirname "$PHP_FPM_SOCKET")"

restart_php_if_running()
{
	if php_is_running; then
		# Restart PHP by stopping it and letting systemd start it again.
		pid="$(php_pid)"
		printf "Restarting PHP... "
		if output="$(kill -15 "$pid" 2>&1)"; then
			while kill -0 "$pid" 2>/dev/null; do
				sleep 1
			done
			printf "done\n"
		else
			printf "error\n"
			echo "$output"
			return 1
		fi
	fi
}

php_is_running()
{
	[ -f "$PHP_FPM_PIDFILE" ] && [ -S "$PHP_FPM_SOCKET" ]
}

wait_for_php()
{
	wait_for_command "Waiting for PHP" php_is_running
}

php_pid()
{
	if php_is_running; then
		cat "$PHP_FPM_PIDFILE"
	else
		echo "Unable to get PHP PID as it's not yet running" >&2
		echo ""
	fi
}

php_memory_limit()
{
	memory_limit="$(snapctl get php.memory-limit)"
	if [ -z "$memory_limit" ]; then
		memory_limit="$DEFAULT_MEMORY_LIMIT"
		php_set_memory_limit "$memory_limit"
		php_set_previous_memory_limit "$memory_limit"
	fi

	echo "$memory_limit"
}

php_set_memory_limit()
{
	snapctl set php.memory-limit="$1"
}

php_previous_memory_limit()
{
	snapctl get private.php.memory-limit
}

php_set_previous_memory_limit()
{
	snapctl set private.php.memory-limit="$1"
}

php_max_execution_time()
{
	max_execution_time="$(snapctl get php.max-execution-time)"
	if [ -z "$max_execution_time" ]; then
		max_execution_time="$DEFAULT_MAX_EXECUTION_TIME"
		php_set_max_execution_time "$max_execution_time"
		php_set_previous_max_execution_time "$max_execution_time"
	fi

	echo "$max_execution_time"
}

php_set_max_execution_time()
{
	snapctl set php.max-execution-time="$1"
}

php_previous_max_execution_time()
{
	snapctl get private.php.max-execution-time
}

php_set_previous_max_execution_time()
{
	snapctl set private.php.max-execution-time="$1"
}

php_max_input_time()
{
	max_input_time="$(snapctl get php.max-input-time)"
	if [ -z "$max_input_time" ]; then
		max_input_time="$DEFAULT_MAX_INPUT_TIME"
		php_set_max_input_time "$max_input_time"
		php_set_previous_max_input_time "$max_input_time"
	fi

	echo "$max_input_time"
}

php_set_max_input_time()
{
	snapctl set php.max-input-time="$1"
}

php_previous_max_input_time()
{
	snapctl get private.php.max-input-time
}

php_set_previous_max_input_time()
{
	snapctl set private.php.max-input-time="$1"
}
